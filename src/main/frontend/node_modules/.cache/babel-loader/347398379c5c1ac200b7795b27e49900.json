{"ast":null,"code":"/** @license MIT License (c) copyright 2010-2014 original author or authors */\n\n/** @author Brian Cavalier */\n\n/** @author John Hann */\n(function (define) {\n  'use strict';\n\n  define(function (require) {\n    var setTimer = require('../env').setTimer;\n\n    var format = require('../format');\n\n    return function unhandledRejection(Promise) {\n      var logError = noop;\n      var logInfo = noop;\n      var localConsole;\n\n      if (typeof console !== 'undefined') {\n        // Alias console to prevent things like uglify's drop_console option from\n        // removing console.log/error. Unhandled rejections fall into the same\n        // category as uncaught exceptions, and build tools shouldn't silence them.\n        localConsole = console;\n        logError = typeof localConsole.error !== 'undefined' ? function (e) {\n          localConsole.error(e);\n        } : function (e) {\n          localConsole.log(e);\n        };\n        logInfo = typeof localConsole.info !== 'undefined' ? function (e) {\n          localConsole.info(e);\n        } : function (e) {\n          localConsole.log(e);\n        };\n      }\n\n      Promise.onPotentiallyUnhandledRejection = function (rejection) {\n        enqueue(report, rejection);\n      };\n\n      Promise.onPotentiallyUnhandledRejectionHandled = function (rejection) {\n        enqueue(unreport, rejection);\n      };\n\n      Promise.onFatalRejection = function (rejection) {\n        enqueue(throwit, rejection.value);\n      };\n\n      var tasks = [];\n      var reported = [];\n      var running = null;\n\n      function report(r) {\n        if (!r.handled) {\n          reported.push(r);\n          logError('Potentially unhandled rejection [' + r.id + '] ' + format.formatError(r.value));\n        }\n      }\n\n      function unreport(r) {\n        var i = reported.indexOf(r);\n\n        if (i >= 0) {\n          reported.splice(i, 1);\n          logInfo('Handled previous rejection [' + r.id + '] ' + format.formatObject(r.value));\n        }\n      }\n\n      function enqueue(f, x) {\n        tasks.push(f, x);\n\n        if (running === null) {\n          running = setTimer(flush, 0);\n        }\n      }\n\n      function flush() {\n        running = null;\n\n        while (tasks.length > 0) {\n          tasks.shift()(tasks.shift());\n        }\n      }\n\n      return Promise;\n    };\n\n    function throwit(e) {\n      throw e;\n    }\n\n    function noop() {}\n  });\n})(typeof define === 'function' && define.amd ? define : function (factory) {\n  module.exports = factory(require);\n});","map":{"version":3,"names":["define","require","setTimer","format","unhandledRejection","Promise","logError","noop","logInfo","localConsole","console","error","e","log","info","onPotentiallyUnhandledRejection","rejection","enqueue","report","onPotentiallyUnhandledRejectionHandled","unreport","onFatalRejection","throwit","value","tasks","reported","running","r","handled","push","id","formatError","i","indexOf","splice","formatObject","f","x","flush","length","shift","amd","factory","module","exports"],"sources":["D:/Chronicle/chronicle-ttm/src/main/frontend/node_modules/when/lib/decorators/unhandledRejection.js"],"sourcesContent":["/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function(require) {\n\n\tvar setTimer = require('../env').setTimer;\n\tvar format = require('../format');\n\n\treturn function unhandledRejection(Promise) {\n\n\t\tvar logError = noop;\n\t\tvar logInfo = noop;\n\t\tvar localConsole;\n\n\t\tif(typeof console !== 'undefined') {\n\t\t\t// Alias console to prevent things like uglify's drop_console option from\n\t\t\t// removing console.log/error. Unhandled rejections fall into the same\n\t\t\t// category as uncaught exceptions, and build tools shouldn't silence them.\n\t\t\tlocalConsole = console;\n\t\t\tlogError = typeof localConsole.error !== 'undefined'\n\t\t\t\t? function (e) { localConsole.error(e); }\n\t\t\t\t: function (e) { localConsole.log(e); };\n\n\t\t\tlogInfo = typeof localConsole.info !== 'undefined'\n\t\t\t\t? function (e) { localConsole.info(e); }\n\t\t\t\t: function (e) { localConsole.log(e); };\n\t\t}\n\n\t\tPromise.onPotentiallyUnhandledRejection = function(rejection) {\n\t\t\tenqueue(report, rejection);\n\t\t};\n\n\t\tPromise.onPotentiallyUnhandledRejectionHandled = function(rejection) {\n\t\t\tenqueue(unreport, rejection);\n\t\t};\n\n\t\tPromise.onFatalRejection = function(rejection) {\n\t\t\tenqueue(throwit, rejection.value);\n\t\t};\n\n\t\tvar tasks = [];\n\t\tvar reported = [];\n\t\tvar running = null;\n\n\t\tfunction report(r) {\n\t\t\tif(!r.handled) {\n\t\t\t\treported.push(r);\n\t\t\t\tlogError('Potentially unhandled rejection [' + r.id + '] ' + format.formatError(r.value));\n\t\t\t}\n\t\t}\n\n\t\tfunction unreport(r) {\n\t\t\tvar i = reported.indexOf(r);\n\t\t\tif(i >= 0) {\n\t\t\t\treported.splice(i, 1);\n\t\t\t\tlogInfo('Handled previous rejection [' + r.id + '] ' + format.formatObject(r.value));\n\t\t\t}\n\t\t}\n\n\t\tfunction enqueue(f, x) {\n\t\t\ttasks.push(f, x);\n\t\t\tif(running === null) {\n\t\t\t\trunning = setTimer(flush, 0);\n\t\t\t}\n\t\t}\n\n\t\tfunction flush() {\n\t\t\trunning = null;\n\t\t\twhile(tasks.length > 0) {\n\t\t\t\ttasks.shift()(tasks.shift());\n\t\t\t}\n\t\t}\n\n\t\treturn Promise;\n\t};\n\n\tfunction throwit(e) {\n\t\tthrow e;\n\t}\n\n\tfunction noop() {}\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}