{"ast":null,"code":"/** @license MIT License (c) copyright 2010-2014 original author or authors */\n\n/** @author Brian Cavalier */\n\n/** @author John Hann */\n(function (define) {\n  'use strict';\n\n  define(function (require) {\n    var inspect = require('../state').inspect;\n\n    return function inspection(Promise) {\n      Promise.prototype.inspect = function () {\n        return inspect(Promise._handler(this));\n      };\n\n      return Promise;\n    };\n  });\n})(typeof define === 'function' && define.amd ? define : function (factory) {\n  module.exports = factory(require);\n});","map":{"version":3,"names":["define","require","inspect","inspection","Promise","prototype","_handler","amd","factory","module","exports"],"sources":["D:/Chronicle/chronicle-ttm/src/main/frontend/node_modules/when/lib/decorators/inspect.js"],"sourcesContent":["/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function(require) {\n\n\tvar inspect = require('../state').inspect;\n\n\treturn function inspection(Promise) {\n\n\t\tPromise.prototype.inspect = function() {\n\t\t\treturn inspect(Promise._handler(this));\n\t\t};\n\n\t\treturn Promise;\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));\n"],"mappings":"AAAA;;AACA;;AACA;AAEC,WAASA,MAAT,EAAiB;EAAE;;EACpBA,MAAM,CAAC,UAASC,OAAT,EAAkB;IAExB,IAAIC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAP,CAAoBC,OAAlC;;IAEA,OAAO,SAASC,UAAT,CAAoBC,OAApB,EAA6B;MAEnCA,OAAO,CAACC,SAAR,CAAkBH,OAAlB,GAA4B,YAAW;QACtC,OAAOA,OAAO,CAACE,OAAO,CAACE,QAAR,CAAiB,IAAjB,CAAD,CAAd;MACA,CAFD;;MAIA,OAAOF,OAAP;IACA,CAPD;EASA,CAbK,CAAN;AAcC,CAfA,EAeC,OAAOJ,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACO,GAAvC,GAA6CP,MAA7C,GAAsD,UAASQ,OAAT,EAAkB;EAAEC,MAAM,CAACC,OAAP,GAAiBF,OAAO,CAACP,OAAD,CAAxB;AAAoC,CAf/G,CAAD"},"metadata":{},"sourceType":"script"}