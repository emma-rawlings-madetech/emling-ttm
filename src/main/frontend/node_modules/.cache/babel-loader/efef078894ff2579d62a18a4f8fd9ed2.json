{"ast":null,"code":"/*\n * Copyright 2014 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n(function (define) {\n  'use strict';\n\n  define(function (require) {\n    var rest = require('./client/default'),\n        browser = require('./client/xhr');\n\n    rest.setPlatformDefaultClient(browser);\n    return rest;\n  });\n})(typeof define === 'function' && define.amd ? define : function (factory) {\n  module.exports = factory(require);\n} // Boilerplate for AMD and Node\n);","map":{"version":3,"names":["define","require","rest","browser","setPlatformDefaultClient","amd","factory","module","exports"],"sources":["D:/Chronicle/chronicle-ttm/src/main/frontend/node_modules/rest/browser.js"],"sourcesContent":["/*\n * Copyright 2014 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n(function (define) {\n\t'use strict';\n\n\tdefine(function (require) {\n\n\t\tvar rest = require('./client/default'),\n\t\t    browser = require('./client/xhr');\n\n\t\trest.setPlatformDefaultClient(browser);\n\n\t\treturn rest;\n\n\t});\n\n}(\n\ttypeof define === 'function' && define.amd ? define : function (factory) { module.exports = factory(require); }\n\t// Boilerplate for AMD and Node\n));\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEC,WAAUA,MAAV,EAAkB;EAClB;;EAEAA,MAAM,CAAC,UAAUC,OAAV,EAAmB;IAEzB,IAAIC,IAAI,GAAGD,OAAO,CAAC,kBAAD,CAAlB;IAAA,IACIE,OAAO,GAAGF,OAAO,CAAC,cAAD,CADrB;;IAGAC,IAAI,CAACE,wBAAL,CAA8BD,OAA9B;IAEA,OAAOD,IAAP;EAEA,CATK,CAAN;AAWA,CAdA,EAeA,OAAOF,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACK,GAAvC,GAA6CL,MAA7C,GAAsD,UAAUM,OAAV,EAAmB;EAAEC,MAAM,CAACC,OAAP,GAAiBF,OAAO,CAACL,OAAD,CAAxB;AAAoC,CAf/G,CAgBA;AAhBA,CAAD"},"metadata":{},"sourceType":"script"}