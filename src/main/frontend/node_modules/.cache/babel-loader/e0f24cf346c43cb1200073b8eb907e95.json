{"ast":null,"code":"/*\n * Copyright 2014-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n'use strict';\n/**\n * Add common helper methods to a client impl\n *\n * @param {function} impl the client implementation\n * @param {Client} [target] target of this client, used when wrapping other clients\n * @returns {Client} the client impl with additional methods\n */\n\nmodule.exports = function client(impl, target) {\n  if (target) {\n    /**\n     * @returns {Client} the target client\n     */\n    impl.skip = function skip() {\n      return target;\n    };\n  }\n  /**\n   * Allow a client to easily be wrapped by an interceptor\n   *\n   * @param {Interceptor} interceptor the interceptor to wrap this client with\n   * @param [config] configuration for the interceptor\n   * @returns {Client} the newly wrapped client\n   */\n\n\n  impl.wrap = function wrap(interceptor, config) {\n    return interceptor(impl, config);\n  };\n  /**\n   * @deprecated\n   */\n\n\n  impl.chain = function chain() {\n    if (typeof console !== 'undefined') {\n      console.log('rest.js: client.chain() is deprecated, use client.wrap() instead');\n    }\n\n    return impl.wrap.apply(this, arguments);\n  };\n\n  return impl;\n};","map":{"version":3,"names":["module","exports","client","impl","target","skip","wrap","interceptor","config","chain","console","log","apply","arguments"],"sources":["D:/Chronicle/chronicle-ttm/src/main/frontend/node_modules/rest/client.js"],"sourcesContent":["/*\n * Copyright 2014-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\n/**\n * Add common helper methods to a client impl\n *\n * @param {function} impl the client implementation\n * @param {Client} [target] target of this client, used when wrapping other clients\n * @returns {Client} the client impl with additional methods\n */\nmodule.exports = function client(impl, target) {\n\n\tif (target) {\n\n\t\t/**\n\t\t * @returns {Client} the target client\n\t\t */\n\t\timpl.skip = function skip() {\n\t\t\treturn target;\n\t\t};\n\n\t}\n\n\t/**\n\t * Allow a client to easily be wrapped by an interceptor\n\t *\n\t * @param {Interceptor} interceptor the interceptor to wrap this client with\n\t * @param [config] configuration for the interceptor\n\t * @returns {Client} the newly wrapped client\n\t */\n\timpl.wrap = function wrap(interceptor, config) {\n\t\treturn interceptor(impl, config);\n\t};\n\n\t/**\n\t * @deprecated\n\t */\n\timpl.chain = function chain() {\n\t\tif (typeof console !== 'undefined') {\n\t\t\tconsole.log('rest.js: client.chain() is deprecated, use client.wrap() instead');\n\t\t}\n\n\t\treturn impl.wrap.apply(this, arguments);\n\t};\n\n\treturn impl;\n\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,MAAT,CAAgBC,IAAhB,EAAsBC,MAAtB,EAA8B;EAE9C,IAAIA,MAAJ,EAAY;IAEX;AACF;AACA;IACED,IAAI,CAACE,IAAL,GAAY,SAASA,IAAT,GAAgB;MAC3B,OAAOD,MAAP;IACA,CAFD;EAIA;EAED;AACD;AACA;AACA;AACA;AACA;AACA;;;EACCD,IAAI,CAACG,IAAL,GAAY,SAASA,IAAT,CAAcC,WAAd,EAA2BC,MAA3B,EAAmC;IAC9C,OAAOD,WAAW,CAACJ,IAAD,EAAOK,MAAP,CAAlB;EACA,CAFD;EAIA;AACD;AACA;;;EACCL,IAAI,CAACM,KAAL,GAAa,SAASA,KAAT,GAAiB;IAC7B,IAAI,OAAOC,OAAP,KAAmB,WAAvB,EAAoC;MACnCA,OAAO,CAACC,GAAR,CAAY,kEAAZ;IACA;;IAED,OAAOR,IAAI,CAACG,IAAL,CAAUM,KAAV,CAAgB,IAAhB,EAAsBC,SAAtB,CAAP;EACA,CAND;;EAQA,OAAOV,IAAP;AAEA,CArCD"},"metadata":{},"sourceType":"script"}