{"ast":null,"code":"/*\n * Copyright 2012-2015 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n(function (define) {\n  'use strict';\n\n  define(function\n    /* require */\n  () {\n    /**\n     * Create a new JSON converter with custom reviver/replacer.\n     *\n     * The extended converter must be published to a MIME registry in order\n     * to be used. The existing converter will not be modified.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON\n     *\n     * @param {function} [reviver=undefined] custom JSON.parse reviver\n     * @param {function|Array} [replacer=undefined] custom JSON.stringify replacer\n     */\n    function createConverter(reviver, replacer) {\n      return {\n        read: function read(str) {\n          return JSON.parse(str, reviver);\n        },\n        write: function write(obj) {\n          return JSON.stringify(obj, replacer);\n        },\n        extend: createConverter\n      };\n    }\n\n    return createConverter();\n  });\n})(typeof define === 'function' && define.amd ? define : function (factory) {\n  module.exports = factory(require);\n} // Boilerplate for AMD and Node\n);","map":{"version":3,"names":["define","createConverter","reviver","replacer","read","str","JSON","parse","write","obj","stringify","extend","amd","factory","module","exports","require"],"sources":["D:/Chronicle/chronicle-ttm/src/main/frontend/node_modules/rest/mime/type/application/json.js"],"sourcesContent":["/*\n * Copyright 2012-2015 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n(function (define) {\n\t'use strict';\n\n\tdefine(function (/* require */) {\n\n\t\t/**\n\t\t * Create a new JSON converter with custom reviver/replacer.\n\t\t *\n\t\t * The extended converter must be published to a MIME registry in order\n\t\t * to be used. The existing converter will not be modified.\n\t\t *\n\t\t * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON\n\t\t *\n\t\t * @param {function} [reviver=undefined] custom JSON.parse reviver\n\t\t * @param {function|Array} [replacer=undefined] custom JSON.stringify replacer\n\t\t */\n\t\tfunction createConverter(reviver, replacer) {\n\t\t\treturn {\n\n\t\t\t\tread: function (str) {\n\t\t\t\t\treturn JSON.parse(str, reviver);\n\t\t\t\t},\n\n\t\t\t\twrite: function (obj) {\n\t\t\t\t\treturn JSON.stringify(obj, replacer);\n\t\t\t\t},\n\n\t\t\t\textend: createConverter\n\n\t\t\t};\n\t\t}\n\n\t\treturn createConverter();\n\n\t});\n\n}(\n\ttypeof define === 'function' && define.amd ? define : function (factory) { module.exports = factory(require); }\n\t// Boilerplate for AMD and Node\n));\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEC,WAAUA,MAAV,EAAkB;EAClB;;EAEAA,MAAM,CAAC;IAAU;EAAV,GAAyB;IAE/B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,SAASC,eAAT,CAAyBC,OAAzB,EAAkCC,QAAlC,EAA4C;MAC3C,OAAO;QAENC,IAAI,EAAE,cAAUC,GAAV,EAAe;UACpB,OAAOC,IAAI,CAACC,KAAL,CAAWF,GAAX,EAAgBH,OAAhB,CAAP;QACA,CAJK;QAMNM,KAAK,EAAE,eAAUC,GAAV,EAAe;UACrB,OAAOH,IAAI,CAACI,SAAL,CAAeD,GAAf,EAAoBN,QAApB,CAAP;QACA,CARK;QAUNQ,MAAM,EAAEV;MAVF,CAAP;IAaA;;IAED,OAAOA,eAAe,EAAtB;EAEA,CA/BK,CAAN;AAiCA,CApCA,EAqCA,OAAOD,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACY,GAAvC,GAA6CZ,MAA7C,GAAsD,UAAUa,OAAV,EAAmB;EAAEC,MAAM,CAACC,OAAP,GAAiBF,OAAO,CAACG,OAAD,CAAxB;AAAoC,CArC/G,CAsCA;AAtCA,CAAD"},"metadata":{},"sourceType":"script"}