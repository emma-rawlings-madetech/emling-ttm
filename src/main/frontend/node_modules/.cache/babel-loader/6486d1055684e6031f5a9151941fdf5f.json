{"ast":null,"code":"/*\n * Copyright 2012 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n(function (define) {\n  'use strict';\n\n  define(function\n    /* require */\n  () {\n    return {\n      read: function read(str) {\n        return str;\n      },\n      write: function write(obj) {\n        return obj.toString();\n      }\n    };\n  });\n})(typeof define === 'function' && define.amd ? define : function (factory) {\n  module.exports = factory(require);\n} // Boilerplate for AMD and Node\n);","map":{"version":3,"names":["define","read","str","write","obj","toString","amd","factory","module","exports","require"],"sources":["D:/Chronicle/chronicle-ttm/src/main/frontend/node_modules/rest/mime/type/text/plain.js"],"sourcesContent":["/*\n * Copyright 2012 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n(function (define) {\n\t'use strict';\n\n\tdefine(function (/* require */) {\n\n\t\treturn {\n\n\t\t\tread: function (str) {\n\t\t\t\treturn str;\n\t\t\t},\n\n\t\t\twrite: function (obj) {\n\t\t\t\treturn obj.toString();\n\t\t\t}\n\n\t\t};\n\t});\n\n}(\n\ttypeof define === 'function' && define.amd ? define : function (factory) { module.exports = factory(require); }\n\t// Boilerplate for AMD and Node\n));\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEC,WAAUA,MAAV,EAAkB;EAClB;;EAEAA,MAAM,CAAC;IAAU;EAAV,GAAyB;IAE/B,OAAO;MAENC,IAAI,EAAE,cAAUC,GAAV,EAAe;QACpB,OAAOA,GAAP;MACA,CAJK;MAMNC,KAAK,EAAE,eAAUC,GAAV,EAAe;QACrB,OAAOA,GAAG,CAACC,QAAJ,EAAP;MACA;IARK,CAAP;EAWA,CAbK,CAAN;AAeA,CAlBA,EAmBA,OAAOL,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACM,GAAvC,GAA6CN,MAA7C,GAAsD,UAAUO,OAAV,EAAmB;EAAEC,MAAM,CAACC,OAAP,GAAiBF,OAAO,CAACG,OAAD,CAAxB;AAAoC,CAnB/G,CAoBA;AApBA,CAAD"},"metadata":{},"sourceType":"script"}