{"ast":null,"code":"/*\n * Copyright 2012-2013 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n(function (define) {\n  'use strict'; // derived from dojo.mixin\n\n  define(function\n    /* require */\n  () {\n    var empty = {};\n    /**\n     * Mix the properties from the source object into the destination object.\n     * When the same property occurs in more then one object, the right most\n     * value wins.\n     *\n     * @param {Object} dest the object to copy properties to\n     * @param {Object} sources the objects to copy properties from.  May be 1 to N arguments, but not an Array.\n     * @return {Object} the destination object\n     */\n\n    function mixin(dest\n    /*, sources... */\n    ) {\n      var i, l, source, name;\n\n      if (!dest) {\n        dest = {};\n      }\n\n      for (i = 1, l = arguments.length; i < l; i += 1) {\n        source = arguments[i];\n\n        for (name in source) {\n          if (!(name in dest) || dest[name] !== source[name] && (!(name in empty) || empty[name] !== source[name])) {\n            dest[name] = source[name];\n          }\n        }\n      }\n\n      return dest; // Object\n    }\n\n    return mixin;\n  });\n})(typeof define === 'function' && define.amd ? define : function (factory) {\n  module.exports = factory(require);\n} // Boilerplate for AMD and Node\n);","map":{"version":3,"names":["define","empty","mixin","dest","i","l","source","name","arguments","length","amd","factory","module","exports","require"],"sources":["D:/Chronicle/chronicle-ttm/src/main/frontend/node_modules/rest/util/mixin.js"],"sourcesContent":["/*\n * Copyright 2012-2013 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n(function (define) {\n\t'use strict';\n\n\t// derived from dojo.mixin\n\tdefine(function (/* require */) {\n\n\t\tvar empty = {};\n\n\t\t/**\n\t\t * Mix the properties from the source object into the destination object.\n\t\t * When the same property occurs in more then one object, the right most\n\t\t * value wins.\n\t\t *\n\t\t * @param {Object} dest the object to copy properties to\n\t\t * @param {Object} sources the objects to copy properties from.  May be 1 to N arguments, but not an Array.\n\t\t * @return {Object} the destination object\n\t\t */\n\t\tfunction mixin(dest /*, sources... */) {\n\t\t\tvar i, l, source, name;\n\n\t\t\tif (!dest) { dest = {}; }\n\t\t\tfor (i = 1, l = arguments.length; i < l; i += 1) {\n\t\t\t\tsource = arguments[i];\n\t\t\t\tfor (name in source) {\n\t\t\t\t\tif (!(name in dest) || (dest[name] !== source[name] && (!(name in empty) || empty[name] !== source[name]))) {\n\t\t\t\t\t\tdest[name] = source[name];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn dest; // Object\n\t\t}\n\n\t\treturn mixin;\n\n\t});\n\n}(\n\ttypeof define === 'function' && define.amd ? define : function (factory) { module.exports = factory(require); }\n\t// Boilerplate for AMD and Node\n));\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEC,WAAUA,MAAV,EAAkB;EAClB,aADkB,CAGlB;;EACAA,MAAM,CAAC;IAAU;EAAV,GAAyB;IAE/B,IAAIC,KAAK,GAAG,EAAZ;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACE,SAASC,KAAT,CAAeC;IAAK;IAApB,EAAuC;MACtC,IAAIC,CAAJ,EAAOC,CAAP,EAAUC,MAAV,EAAkBC,IAAlB;;MAEA,IAAI,CAACJ,IAAL,EAAW;QAAEA,IAAI,GAAG,EAAP;MAAY;;MACzB,KAAKC,CAAC,GAAG,CAAJ,EAAOC,CAAC,GAAGG,SAAS,CAACC,MAA1B,EAAkCL,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,IAAI,CAA9C,EAAiD;QAChDE,MAAM,GAAGE,SAAS,CAACJ,CAAD,CAAlB;;QACA,KAAKG,IAAL,IAAaD,MAAb,EAAqB;UACpB,IAAI,EAAEC,IAAI,IAAIJ,IAAV,KAAoBA,IAAI,CAACI,IAAD,CAAJ,KAAeD,MAAM,CAACC,IAAD,CAArB,KAAgC,EAAEA,IAAI,IAAIN,KAAV,KAAoBA,KAAK,CAACM,IAAD,CAAL,KAAgBD,MAAM,CAACC,IAAD,CAA1E,CAAxB,EAA4G;YAC3GJ,IAAI,CAACI,IAAD,CAAJ,GAAaD,MAAM,CAACC,IAAD,CAAnB;UACA;QACD;MACD;;MAED,OAAOJ,IAAP,CAbsC,CAazB;IACb;;IAED,OAAOD,KAAP;EAEA,CA/BK,CAAN;AAiCA,CArCA,EAsCA,OAAOF,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACU,GAAvC,GAA6CV,MAA7C,GAAsD,UAAUW,OAAV,EAAmB;EAAEC,MAAM,CAACC,OAAP,GAAiBF,OAAO,CAACG,OAAD,CAAxB;AAAoC,CAtC/G,CAuCA;AAvCA,CAAD"},"metadata":{},"sourceType":"script"}