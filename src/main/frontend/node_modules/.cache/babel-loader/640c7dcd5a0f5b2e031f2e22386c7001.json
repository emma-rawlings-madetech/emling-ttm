{"ast":null,"code":"/*\n * Copyright 2013-2015 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n(function (define) {\n  'use strict';\n\n  define(function (require) {\n    var pathPrefix, template, find, lazyPromise, responsePromise, when;\n    pathPrefix = require('../../../interceptor/pathPrefix');\n    template = require('../../../interceptor/template');\n    find = require('../../../util/find');\n    lazyPromise = require('../../../util/lazyPromise');\n    responsePromise = require('../../../util/responsePromise');\n    when = require('when');\n\n    function defineProperty(obj, name, value) {\n      Object.defineProperty(obj, name, {\n        value: value,\n        configurable: true,\n        enumerable: false,\n        writeable: true\n      });\n    }\n    /**\n     * Hypertext Application Language serializer\n     *\n     * Implemented to https://tools.ietf.org/html/draft-kelly-json-hal-06\n     *\n     * As the spec is still a draft, this implementation will be updated as the\n     * spec evolves\n     *\n     * Objects are read as HAL indexing links and embedded objects on to the\n     * resource. Objects are written as plain JSON.\n     *\n     * Embedded relationships are indexed onto the resource by the relationship\n     * as a promise for the related resource.\n     *\n     * Links are indexed onto the resource as a lazy promise that will GET the\n     * resource when a handler is first registered on the promise.\n     *\n     * A `requestFor` method is added to the entity to make a request for the\n     * relationship.\n     *\n     * A `clientFor` method is added to the entity to get a full Client for a\n     * relationship.\n     *\n     * The `_links` and `_embedded` properties on the resource are made\n     * non-enumerable.\n     */\n\n\n    return {\n      read: function read(str, opts) {\n        var client, console;\n        opts = opts || {};\n        client = opts.client;\n        console = opts.console || console;\n\n        function deprecationWarning(relationship, deprecation) {\n          if (deprecation && console && console.warn || console.log) {\n            (console.warn || console.log).call(console, 'Relationship \\'' + relationship + '\\' is deprecated, see ' + deprecation);\n          }\n        }\n\n        return opts.registry.lookup(opts.mime.suffix).then(function (converter) {\n          return when(converter.read(str, opts)).then(function (root) {\n            find.findProperties(root, '_embedded', function (embedded, resource, name) {\n              Object.keys(embedded).forEach(function (relationship) {\n                if (relationship in resource) {\n                  return;\n                }\n\n                var related = responsePromise({\n                  entity: embedded[relationship]\n                });\n                defineProperty(resource, relationship, related);\n              });\n              defineProperty(resource, name, embedded);\n            });\n            find.findProperties(root, '_links', function (links, resource, name) {\n              Object.keys(links).forEach(function (relationship) {\n                var link = links[relationship];\n\n                if (relationship in resource) {\n                  return;\n                }\n\n                defineProperty(resource, relationship, responsePromise.make(lazyPromise(function () {\n                  if (link.deprecation) {\n                    deprecationWarning(relationship, link.deprecation);\n                  }\n\n                  if (link.templated === true) {\n                    return template(client)({\n                      path: link.href\n                    });\n                  }\n\n                  return client({\n                    path: link.href\n                  });\n                })));\n              });\n              defineProperty(resource, name, links);\n              defineProperty(resource, 'clientFor', function (relationship, clientOverride) {\n                var link = links[relationship];\n\n                if (!link) {\n                  throw new Error('Unknown relationship: ' + relationship);\n                }\n\n                if (link.deprecation) {\n                  deprecationWarning(relationship, link.deprecation);\n                }\n\n                if (link.templated === true) {\n                  return template(clientOverride || client, {\n                    template: link.href\n                  });\n                }\n\n                return pathPrefix(clientOverride || client, {\n                  prefix: link.href\n                });\n              });\n              defineProperty(resource, 'requestFor', function (relationship, request, clientOverride) {\n                var client = this.clientFor(relationship, clientOverride);\n                return client(request);\n              });\n            });\n            return root;\n          });\n        });\n      },\n      write: function write(obj, opts) {\n        return opts.registry.lookup(opts.mime.suffix).then(function (converter) {\n          return converter.write(obj, opts);\n        });\n      }\n    };\n  });\n})(typeof define === 'function' && define.amd ? define : function (factory) {\n  module.exports = factory(require);\n} // Boilerplate for AMD and Node\n);","map":{"version":3,"names":["define","require","pathPrefix","template","find","lazyPromise","responsePromise","when","defineProperty","obj","name","value","Object","configurable","enumerable","writeable","read","str","opts","client","console","deprecationWarning","relationship","deprecation","warn","log","call","registry","lookup","mime","suffix","then","converter","root","findProperties","embedded","resource","keys","forEach","related","entity","links","link","make","templated","path","href","clientOverride","Error","prefix","request","clientFor","write","amd","factory","module","exports"],"sources":["D:/Chronicle/chronicle-ttm/src/main/frontend/node_modules/rest/mime/type/application/hal.js"],"sourcesContent":["/*\n * Copyright 2013-2015 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n(function (define) {\n\t'use strict';\n\n\tdefine(function (require) {\n\n\t\tvar pathPrefix, template, find, lazyPromise, responsePromise, when;\n\n\t\tpathPrefix = require('../../../interceptor/pathPrefix');\n\t\ttemplate = require('../../../interceptor/template');\n\t\tfind = require('../../../util/find');\n\t\tlazyPromise = require('../../../util/lazyPromise');\n\t\tresponsePromise = require('../../../util/responsePromise');\n\t\twhen = require('when');\n\n\t\tfunction defineProperty(obj, name, value) {\n\t\t\tObject.defineProperty(obj, name, {\n\t\t\t\tvalue: value,\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\twriteable: true\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Hypertext Application Language serializer\n\t\t *\n\t\t * Implemented to https://tools.ietf.org/html/draft-kelly-json-hal-06\n\t\t *\n\t\t * As the spec is still a draft, this implementation will be updated as the\n\t\t * spec evolves\n\t\t *\n\t\t * Objects are read as HAL indexing links and embedded objects on to the\n\t\t * resource. Objects are written as plain JSON.\n\t\t *\n\t\t * Embedded relationships are indexed onto the resource by the relationship\n\t\t * as a promise for the related resource.\n\t\t *\n\t\t * Links are indexed onto the resource as a lazy promise that will GET the\n\t\t * resource when a handler is first registered on the promise.\n\t\t *\n\t\t * A `requestFor` method is added to the entity to make a request for the\n\t\t * relationship.\n\t\t *\n\t\t * A `clientFor` method is added to the entity to get a full Client for a\n\t\t * relationship.\n\t\t *\n\t\t * The `_links` and `_embedded` properties on the resource are made\n\t\t * non-enumerable.\n\t\t */\n\t\treturn {\n\n\t\t\tread: function (str, opts) {\n\t\t\t\tvar client, console;\n\n\t\t\t\topts = opts || {};\n\t\t\t\tclient = opts.client;\n\t\t\t\tconsole = opts.console || console;\n\n\t\t\t\tfunction deprecationWarning(relationship, deprecation) {\n\t\t\t\t\tif (deprecation && console && console.warn || console.log) {\n\t\t\t\t\t\t(console.warn || console.log).call(console, 'Relationship \\'' + relationship + '\\' is deprecated, see ' + deprecation);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn opts.registry.lookup(opts.mime.suffix).then(function (converter) {\n\t\t\t\t\treturn when(converter.read(str, opts)).then(function (root) {\n\n\t\t\t\t\t\tfind.findProperties(root, '_embedded', function (embedded, resource, name) {\n\t\t\t\t\t\t\tObject.keys(embedded).forEach(function (relationship) {\n\t\t\t\t\t\t\t\tif (relationship in resource) { return; }\n\t\t\t\t\t\t\t\tvar related = responsePromise({\n\t\t\t\t\t\t\t\t\tentity: embedded[relationship]\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tdefineProperty(resource, relationship, related);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tdefineProperty(resource, name, embedded);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfind.findProperties(root, '_links', function (links, resource, name) {\n\t\t\t\t\t\t\tObject.keys(links).forEach(function (relationship) {\n\t\t\t\t\t\t\t\tvar link = links[relationship];\n\t\t\t\t\t\t\t\tif (relationship in resource) { return; }\n\t\t\t\t\t\t\t\tdefineProperty(resource, relationship, responsePromise.make(lazyPromise(function () {\n\t\t\t\t\t\t\t\t\tif (link.deprecation) { deprecationWarning(relationship, link.deprecation); }\n\t\t\t\t\t\t\t\t\tif (link.templated === true) {\n\t\t\t\t\t\t\t\t\t\treturn template(client)({ path: link.href });\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn client({ path: link.href });\n\t\t\t\t\t\t\t\t})));\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tdefineProperty(resource, name, links);\n\t\t\t\t\t\t\tdefineProperty(resource, 'clientFor', function (relationship, clientOverride) {\n\t\t\t\t\t\t\t\tvar link = links[relationship];\n\t\t\t\t\t\t\t\tif (!link) {\n\t\t\t\t\t\t\t\t\tthrow new Error('Unknown relationship: ' + relationship);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (link.deprecation) { deprecationWarning(relationship, link.deprecation); }\n\t\t\t\t\t\t\t\tif (link.templated === true) {\n\t\t\t\t\t\t\t\t\treturn template(\n\t\t\t\t\t\t\t\t\t\tclientOverride || client,\n\t\t\t\t\t\t\t\t\t\t{ template: link.href }\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn pathPrefix(\n\t\t\t\t\t\t\t\t\tclientOverride || client,\n\t\t\t\t\t\t\t\t\t{ prefix: link.href }\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tdefineProperty(resource, 'requestFor', function (relationship, request, clientOverride) {\n\t\t\t\t\t\t\t\tvar client = this.clientFor(relationship, clientOverride);\n\t\t\t\t\t\t\t\treturn client(request);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn root;\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t},\n\n\t\t\twrite: function (obj, opts) {\n\t\t\t\treturn opts.registry.lookup(opts.mime.suffix).then(function (converter) {\n\t\t\t\t\treturn converter.write(obj, opts);\n\t\t\t\t});\n\t\t\t}\n\n\t\t};\n\t});\n\n}(\n\ttypeof define === 'function' && define.amd ? define : function (factory) { module.exports = factory(require); }\n\t// Boilerplate for AMD and Node\n));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}