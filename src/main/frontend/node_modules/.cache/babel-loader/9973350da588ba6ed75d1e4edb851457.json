{"ast":null,"code":"/*\n * Copyright 2012-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n'use strict';\n\nvar mime, registry;\nmime = require('../mime');\n\nfunction Registry(mimes) {\n  /**\n   * Lookup the converter for a MIME type\n   *\n   * @param {string} type the MIME type\n   * @return a promise for the converter\n   */\n  this.lookup = function lookup(type) {\n    var parsed;\n    parsed = typeof type === 'string' ? mime.parse(type) : type;\n\n    if (mimes[parsed.raw]) {\n      return mimes[parsed.raw];\n    }\n\n    if (mimes[parsed.type + parsed.suffix]) {\n      return mimes[parsed.type + parsed.suffix];\n    }\n\n    if (mimes[parsed.type]) {\n      return mimes[parsed.type];\n    }\n\n    if (mimes[parsed.suffix]) {\n      return mimes[parsed.suffix];\n    }\n\n    return Promise.reject(new Error('Unable to locate converter for mime \"' + parsed.raw + '\"'));\n  };\n  /**\n   * Create a late dispatched proxy to the target converter.\n   *\n   * Common when a converter is registered under multiple names and\n   * should be kept in sync if updated.\n   *\n   * @param {string} type mime converter to dispatch to\n   * @returns converter whose read/write methods target the desired mime converter\n   */\n\n\n  this.delegate = function delegate(type) {\n    return {\n      read: function () {\n        var args = arguments;\n        return this.lookup(type).then(function (converter) {\n          return converter.read.apply(this, args);\n        }.bind(this));\n      }.bind(this),\n      write: function () {\n        var args = arguments;\n        return this.lookup(type).then(function (converter) {\n          return converter.write.apply(this, args);\n        }.bind(this));\n      }.bind(this)\n    };\n  };\n  /**\n   * Register a custom converter for a MIME type\n   *\n   * @param {string} type the MIME type\n   * @param converter the converter for the MIME type\n   * @return a promise for the converter\n   */\n\n\n  this.register = function register(type, converter) {\n    mimes[type] = Promise.resolve(converter);\n    return mimes[type];\n  };\n  /**\n   * Create a child registry whoes registered converters remain local, while\n   * able to lookup converters from its parent.\n   *\n   * @returns child MIME registry\n   */\n\n\n  this.child = function child() {\n    return new Registry(Object.create(mimes));\n  };\n}\n\nregistry = new Registry({}); // include provided serializers\n\nregistry.register('application/hal', require('./type/application/hal'));\nregistry.register('application/json', require('./type/application/json'));\nregistry.register('application/x-www-form-urlencoded', require('./type/application/x-www-form-urlencoded'));\nregistry.register('multipart/form-data', require('./type/multipart/form-data'));\nregistry.register('text/plain', require('./type/text/plain'));\nregistry.register('+json', registry.delegate('application/json'));\nmodule.exports = registry;","map":{"version":3,"names":["mime","registry","require","Registry","mimes","lookup","type","parsed","parse","raw","suffix","Promise","reject","Error","delegate","read","args","arguments","then","converter","apply","bind","write","register","resolve","child","Object","create","module","exports"],"sources":["D:/Chronicle/chronicle-ttm/src/main/frontend/node_modules/rest/mime/registry.js"],"sourcesContent":["/*\n * Copyright 2012-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\nvar mime, registry;\n\nmime = require('../mime');\n\nfunction Registry(mimes) {\n\n\t/**\n\t * Lookup the converter for a MIME type\n\t *\n\t * @param {string} type the MIME type\n\t * @return a promise for the converter\n\t */\n\tthis.lookup = function lookup(type) {\n\t\tvar parsed;\n\n\t\tparsed = typeof type === 'string' ? mime.parse(type) : type;\n\n\t\tif (mimes[parsed.raw]) {\n\t\t\treturn mimes[parsed.raw];\n\t\t}\n\t\tif (mimes[parsed.type + parsed.suffix]) {\n\t\t\treturn mimes[parsed.type + parsed.suffix];\n\t\t}\n\t\tif (mimes[parsed.type]) {\n\t\t\treturn mimes[parsed.type];\n\t\t}\n\t\tif (mimes[parsed.suffix]) {\n\t\t\treturn mimes[parsed.suffix];\n\t\t}\n\n\t\treturn Promise.reject(new Error('Unable to locate converter for mime \"' + parsed.raw + '\"'));\n\t};\n\n\t/**\n\t * Create a late dispatched proxy to the target converter.\n\t *\n\t * Common when a converter is registered under multiple names and\n\t * should be kept in sync if updated.\n\t *\n\t * @param {string} type mime converter to dispatch to\n\t * @returns converter whose read/write methods target the desired mime converter\n\t */\n\tthis.delegate = function delegate(type) {\n\t\treturn {\n\t\t\tread: function () {\n\t\t\t\tvar args = arguments;\n\t\t\t\treturn this.lookup(type).then(function (converter) {\n\t\t\t\t\treturn converter.read.apply(this, args);\n\t\t\t\t}.bind(this));\n\t\t\t}.bind(this),\n\t\t\twrite: function () {\n\t\t\t\tvar args = arguments;\n\t\t\t\treturn this.lookup(type).then(function (converter) {\n\t\t\t\t\treturn converter.write.apply(this, args);\n\t\t\t\t}.bind(this));\n\t\t\t}.bind(this)\n\t\t};\n\t};\n\n\t/**\n\t * Register a custom converter for a MIME type\n\t *\n\t * @param {string} type the MIME type\n\t * @param converter the converter for the MIME type\n\t * @return a promise for the converter\n\t */\n\tthis.register = function register(type, converter) {\n\t\tmimes[type] = Promise.resolve(converter);\n\t\treturn mimes[type];\n\t};\n\n\t/**\n\t * Create a child registry whoes registered converters remain local, while\n\t * able to lookup converters from its parent.\n\t *\n\t * @returns child MIME registry\n\t */\n\tthis.child = function child() {\n\t\treturn new Registry(Object.create(mimes));\n\t};\n\n}\n\nregistry = new Registry({});\n\n// include provided serializers\nregistry.register('application/hal', require('./type/application/hal'));\nregistry.register('application/json', require('./type/application/json'));\nregistry.register('application/x-www-form-urlencoded', require('./type/application/x-www-form-urlencoded'));\nregistry.register('multipart/form-data', require('./type/multipart/form-data'));\nregistry.register('text/plain', require('./type/text/plain'));\n\nregistry.register('+json', registry.delegate('application/json'));\n\nmodule.exports = registry;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}