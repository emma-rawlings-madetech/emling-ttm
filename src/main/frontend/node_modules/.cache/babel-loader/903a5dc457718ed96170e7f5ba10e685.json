{"ast":null,"code":"/*\n * Copyright 2012 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n(function (define) {\n  'use strict';\n\n  define(function\n    /* require */\n  () {\n    /**\n     * Normalize HTTP header names using the pseudo camel case.\n     *\n     * For example:\n     *   content-type         -> Content-Type\n     *   accepts              -> Accepts\n     *   x-custom-header-name -> X-Custom-Header-Name\n     *\n     * @param {string} name the raw header name\n     * @return {string} the normalized header name\n     */\n    function normalizeHeaderName(name) {\n      return name.toLowerCase().split('-').map(function (chunk) {\n        return chunk.charAt(0).toUpperCase() + chunk.slice(1);\n      }).join('-');\n    }\n\n    return normalizeHeaderName;\n  });\n})(typeof define === 'function' && define.amd ? define : function (factory) {\n  module.exports = factory(require);\n} // Boilerplate for AMD and Node\n);","map":{"version":3,"names":["define","normalizeHeaderName","name","toLowerCase","split","map","chunk","charAt","toUpperCase","slice","join","amd","factory","module","exports","require"],"sources":["D:/Chronicle/chronicle-ttm/src/main/frontend/node_modules/rest/util/normalizeHeaderName.js"],"sourcesContent":["/*\n * Copyright 2012 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n(function (define) {\n\t'use strict';\n\n\tdefine(function (/* require */) {\n\n\t\t/**\n\t\t * Normalize HTTP header names using the pseudo camel case.\n\t\t *\n\t\t * For example:\n\t\t *   content-type         -> Content-Type\n\t\t *   accepts              -> Accepts\n\t\t *   x-custom-header-name -> X-Custom-Header-Name\n\t\t *\n\t\t * @param {string} name the raw header name\n\t\t * @return {string} the normalized header name\n\t\t */\n\t\tfunction normalizeHeaderName(name) {\n\t\t\treturn name.toLowerCase()\n\t\t\t\t.split('-')\n\t\t\t\t.map(function (chunk) { return chunk.charAt(0).toUpperCase() + chunk.slice(1); })\n\t\t\t\t.join('-');\n\t\t}\n\n\t\treturn normalizeHeaderName;\n\n\t});\n\n}(\n\ttypeof define === 'function' && define.amd ? define : function (factory) { module.exports = factory(require); }\n\t// Boilerplate for AMD and Node\n));\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEC,WAAUA,MAAV,EAAkB;EAClB;;EAEAA,MAAM,CAAC;IAAU;EAAV,GAAyB;IAE/B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,SAASC,mBAAT,CAA6BC,IAA7B,EAAmC;MAClC,OAAOA,IAAI,CAACC,WAAL,GACLC,KADK,CACC,GADD,EAELC,GAFK,CAED,UAAUC,KAAV,EAAiB;QAAE,OAAOA,KAAK,CAACC,MAAN,CAAa,CAAb,EAAgBC,WAAhB,KAAgCF,KAAK,CAACG,KAAN,CAAY,CAAZ,CAAvC;MAAwD,CAF1E,EAGLC,IAHK,CAGA,GAHA,CAAP;IAIA;;IAED,OAAOT,mBAAP;EAEA,CAtBK,CAAN;AAwBA,CA3BA,EA4BA,OAAOD,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACW,GAAvC,GAA6CX,MAA7C,GAAsD,UAAUY,OAAV,EAAmB;EAAEC,MAAM,CAACC,OAAP,GAAiBF,OAAO,CAACG,OAAD,CAAxB;AAAoC,CA5B/G,CA6BA;AA7BA,CAAD"},"metadata":{},"sourceType":"script"}