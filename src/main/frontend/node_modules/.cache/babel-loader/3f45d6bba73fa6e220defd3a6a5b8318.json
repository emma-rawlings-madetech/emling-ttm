{"ast":null,"code":"/*\n * Copyright 2015 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n(function (define) {\n  'use strict';\n\n  var undef;\n  define(function (require) {\n    var uriEncoder, operations, prefixRE;\n    uriEncoder = require('./uriEncoder');\n    prefixRE = /^([^:]*):([0-9]+)$/;\n    operations = {\n      '': {\n        first: '',\n        separator: ',',\n        named: false,\n        empty: '',\n        encoder: uriEncoder.encode\n      },\n      '+': {\n        first: '',\n        separator: ',',\n        named: false,\n        empty: '',\n        encoder: uriEncoder.encodeURL\n      },\n      '#': {\n        first: '#',\n        separator: ',',\n        named: false,\n        empty: '',\n        encoder: uriEncoder.encodeURL\n      },\n      '.': {\n        first: '.',\n        separator: '.',\n        named: false,\n        empty: '',\n        encoder: uriEncoder.encode\n      },\n      '/': {\n        first: '/',\n        separator: '/',\n        named: false,\n        empty: '',\n        encoder: uriEncoder.encode\n      },\n      ';': {\n        first: ';',\n        separator: ';',\n        named: true,\n        empty: '',\n        encoder: uriEncoder.encode\n      },\n      '?': {\n        first: '?',\n        separator: '&',\n        named: true,\n        empty: '=',\n        encoder: uriEncoder.encode\n      },\n      '&': {\n        first: '&',\n        separator: '&',\n        named: true,\n        empty: '=',\n        encoder: uriEncoder.encode\n      },\n      '=': {\n        reserved: true\n      },\n      ',': {\n        reserved: true\n      },\n      '!': {\n        reserved: true\n      },\n      '@': {\n        reserved: true\n      },\n      '|': {\n        reserved: true\n      }\n    };\n\n    function apply(operation, expression, params) {\n      /*jshint maxcomplexity:11 */\n      return expression.split(',').reduce(function (result, variable) {\n        var opts, value;\n        opts = {};\n\n        if (variable.slice(-1) === '*') {\n          variable = variable.slice(0, -1);\n          opts.explode = true;\n        }\n\n        if (prefixRE.test(variable)) {\n          var prefix = prefixRE.exec(variable);\n          variable = prefix[1];\n          opts.maxLength = parseInt(prefix[2]);\n        }\n\n        variable = uriEncoder.decode(variable);\n        value = params[variable];\n\n        if (value === undef || value === null) {\n          return result;\n        }\n\n        if (Array.isArray(value)) {\n          result += value.reduce(function (result, value) {\n            if (result.length) {\n              result += opts.explode ? operation.separator : ',';\n\n              if (operation.named && opts.explode) {\n                result += operation.encoder(variable);\n                result += value.length ? '=' : operation.empty;\n              }\n            } else {\n              result += operation.first;\n\n              if (operation.named) {\n                result += operation.encoder(variable);\n                result += value.length ? '=' : operation.empty;\n              }\n            }\n\n            result += operation.encoder(value);\n            return result;\n          }, '');\n        } else if (typeof value === 'object') {\n          result += Object.keys(value).reduce(function (result, name) {\n            if (result.length) {\n              result += opts.explode ? operation.separator : ',';\n            } else {\n              result += operation.first;\n\n              if (operation.named && !opts.explode) {\n                result += operation.encoder(variable);\n                result += value[name].length ? '=' : operation.empty;\n              }\n            }\n\n            result += operation.encoder(name);\n            result += opts.explode ? '=' : ',';\n            result += operation.encoder(value[name]);\n            return result;\n          }, '');\n        } else {\n          value = String(value);\n\n          if (opts.maxLength) {\n            value = value.slice(0, opts.maxLength);\n          }\n\n          result += result.length ? operation.separator : operation.first;\n\n          if (operation.named) {\n            result += operation.encoder(variable);\n            result += value.length ? '=' : operation.empty;\n          }\n\n          result += operation.encoder(value);\n        }\n\n        return result;\n      }, '');\n    }\n\n    function expandExpression(expression, params) {\n      var operation;\n      operation = operations[expression.slice(0, 1)];\n\n      if (operation) {\n        expression = expression.slice(1);\n      } else {\n        operation = operations[''];\n      }\n\n      if (operation.reserved) {\n        throw new Error('Reserved expression operations are not supported');\n      }\n\n      return apply(operation, expression, params);\n    }\n\n    function expandTemplate(template, params) {\n      var start, end, uri;\n      uri = '';\n      end = 0;\n\n      while (true) {\n        start = template.indexOf('{', end);\n\n        if (start === -1) {\n          // no more expressions\n          uri += template.slice(end);\n          break;\n        }\n\n        uri += template.slice(end, start);\n        end = template.indexOf('}', start) + 1;\n        uri += expandExpression(template.slice(start + 1, end - 1), params);\n      }\n\n      return uri;\n    }\n\n    return {\n      /**\n       * Expand a URI Template with parameters to form a URI.\n       *\n       * Full implementation (level 4) of rfc6570.\n       * @see https://tools.ietf.org/html/rfc6570\n       *\n       * @param {string} template URI template\n       * @param {Object} [params] params to apply to the template durring expantion\n       * @returns {string} expanded URI\n       */\n      expand: expandTemplate\n    };\n  });\n})(typeof define === 'function' && define.amd ? define : function (factory) {\n  module.exports = factory(require);\n} // Boilerplate for AMD and Node\n);","map":{"version":3,"names":["define","undef","require","uriEncoder","operations","prefixRE","first","separator","named","empty","encoder","encode","encodeURL","reserved","apply","operation","expression","params","split","reduce","result","variable","opts","value","slice","explode","test","prefix","exec","maxLength","parseInt","decode","Array","isArray","length","Object","keys","name","String","expandExpression","Error","expandTemplate","template","start","end","uri","indexOf","expand","amd","factory","module","exports"],"sources":["D:/Chronicle/chronicle-ttm/src/main/frontend/node_modules/rest/util/uriTemplate.js"],"sourcesContent":["/*\n * Copyright 2015 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n(function (define) {\n\t'use strict';\n\n\tvar undef;\n\n\tdefine(function (require) {\n\n\t\tvar uriEncoder, operations, prefixRE;\n\n\t\turiEncoder = require('./uriEncoder');\n\n\t\tprefixRE = /^([^:]*):([0-9]+)$/;\n\t\toperations = {\n\t\t\t'':  { first: '',  separator: ',', named: false, empty: '',  encoder: uriEncoder.encode },\n\t\t\t'+': { first: '',  separator: ',', named: false, empty: '',  encoder: uriEncoder.encodeURL },\n\t\t\t'#': { first: '#', separator: ',', named: false, empty: '',  encoder: uriEncoder.encodeURL },\n\t\t\t'.': { first: '.', separator: '.', named: false, empty: '',  encoder: uriEncoder.encode },\n\t\t\t'/': { first: '/', separator: '/', named: false, empty: '',  encoder: uriEncoder.encode },\n\t\t\t';': { first: ';', separator: ';', named: true,  empty: '',  encoder: uriEncoder.encode },\n\t\t\t'?': { first: '?', separator: '&', named: true,  empty: '=', encoder: uriEncoder.encode },\n\t\t\t'&': { first: '&', separator: '&', named: true,  empty: '=', encoder: uriEncoder.encode },\n\t\t\t'=': { reserved: true },\n\t\t\t',': { reserved: true },\n\t\t\t'!': { reserved: true },\n\t\t\t'@': { reserved: true },\n\t\t\t'|': { reserved: true }\n\t\t};\n\n\t\tfunction apply(operation, expression, params) {\n\t\t\t/*jshint maxcomplexity:11 */\n\t\t\treturn expression.split(',').reduce(function (result, variable) {\n\t\t\t\tvar opts, value;\n\n\t\t\t\topts = {};\n\t\t\t\tif (variable.slice(-1) === '*') {\n\t\t\t\t\tvariable = variable.slice(0, -1);\n\t\t\t\t\topts.explode = true;\n\t\t\t\t}\n\t\t\t\tif (prefixRE.test(variable)) {\n\t\t\t\t\tvar prefix = prefixRE.exec(variable);\n\t\t\t\t\tvariable = prefix[1];\n\t\t\t\t\topts.maxLength = parseInt(prefix[2]);\n\t\t\t\t}\n\n\t\t\t\tvariable = uriEncoder.decode(variable);\n\t\t\t\tvalue = params[variable];\n\n\t\t\t\tif (value === undef || value === null) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tresult += value.reduce(function (result, value) {\n\t\t\t\t\t\tif (result.length) {\n\t\t\t\t\t\t\tresult += opts.explode ? operation.separator : ',';\n\t\t\t\t\t\t\tif (operation.named && opts.explode) {\n\t\t\t\t\t\t\t\tresult += operation.encoder(variable);\n\t\t\t\t\t\t\t\tresult += value.length ? '=' : operation.empty;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tresult += operation.first;\n\t\t\t\t\t\t\tif (operation.named) {\n\t\t\t\t\t\t\t\tresult += operation.encoder(variable);\n\t\t\t\t\t\t\t\tresult += value.length ? '=' : operation.empty;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult += operation.encoder(value);\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}, '');\n\t\t\t\t}\n\t\t\t\telse if (typeof value === 'object') {\n\t\t\t\t\tresult += Object.keys(value).reduce(function (result, name) {\n\t\t\t\t\t\tif (result.length) {\n\t\t\t\t\t\t\tresult += opts.explode ? operation.separator : ',';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tresult += operation.first;\n\t\t\t\t\t\t\tif (operation.named && !opts.explode) {\n\t\t\t\t\t\t\t\tresult += operation.encoder(variable);\n\t\t\t\t\t\t\t\tresult += value[name].length ? '=' : operation.empty;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult += operation.encoder(name);\n\t\t\t\t\t\tresult += opts.explode ? '=' : ',';\n\t\t\t\t\t\tresult += operation.encoder(value[name]);\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}, '');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalue = String(value);\n\t\t\t\t\tif (opts.maxLength) {\n\t\t\t\t\t\tvalue = value.slice(0, opts.maxLength);\n\t\t\t\t\t}\n\t\t\t\t\tresult += result.length ? operation.separator : operation.first;\n\t\t\t\t\tif (operation.named) {\n\t\t\t\t\t\tresult += operation.encoder(variable);\n\t\t\t\t\t\tresult += value.length ? '=' : operation.empty;\n\t\t\t\t\t}\n\t\t\t\t\tresult += operation.encoder(value);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, '');\n\t\t}\n\n\t\tfunction expandExpression(expression, params) {\n\t\t\tvar operation;\n\n\t\t\toperation = operations[expression.slice(0,1)];\n\t\t\tif (operation) {\n\t\t\t\texpression = expression.slice(1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\toperation = operations[''];\n\t\t\t}\n\n\t\t\tif (operation.reserved) {\n\t\t\t\tthrow new Error('Reserved expression operations are not supported');\n\t\t\t}\n\n\t\t\treturn apply(operation, expression, params);\n\t\t}\n\n\t\tfunction expandTemplate(template, params) {\n\t\t\tvar start, end, uri;\n\n\t\t\turi = '';\n\t\t\tend = 0;\n\t\t\twhile (true) {\n\t\t\t\tstart = template.indexOf('{', end);\n\t\t\t\tif (start === -1) {\n\t\t\t\t\t// no more expressions\n\t\t\t\t\turi += template.slice(end);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\turi += template.slice(end, start);\n\t\t\t\tend = template.indexOf('}', start) + 1;\n\t\t\t\turi += expandExpression(template.slice(start + 1, end - 1), params);\n\t\t\t}\n\n\t\t\treturn uri;\n\t\t}\n\n\t\treturn {\n\n\t\t\t/**\n\t\t\t * Expand a URI Template with parameters to form a URI.\n\t\t\t *\n\t\t\t * Full implementation (level 4) of rfc6570.\n\t\t\t * @see https://tools.ietf.org/html/rfc6570\n\t\t\t *\n\t\t\t * @param {string} template URI template\n\t\t\t * @param {Object} [params] params to apply to the template durring expantion\n\t\t\t * @returns {string} expanded URI\n\t\t\t */\n\t\t\texpand: expandTemplate\n\n\t\t};\n\n\t});\n\n}(\n\ttypeof define === 'function' && define.amd ? define : function (factory) { module.exports = factory(require); }\n\t// Boilerplate for AMD and Node\n));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}