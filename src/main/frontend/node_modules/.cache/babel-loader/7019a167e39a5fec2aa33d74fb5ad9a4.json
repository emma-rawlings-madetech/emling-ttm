{"ast":null,"code":"/*\n * Copyright 2012-2013 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n(function (define) {\n  'use strict';\n\n  define(function (require) {\n    var interceptor, when;\n    interceptor = require('../interceptor');\n    when = require('when');\n    /**\n     * Rejects the response promise based on the status code.\n     *\n     * Codes greater than or equal to the provided value are rejected.  Default\n     * value 400.\n     *\n     * @param {Client} [client] client to wrap\n     * @param {number} [config.code=400] code to indicate a rejection\n     *\n     * @returns {Client}\n     */\n\n    return interceptor({\n      init: function init(config) {\n        config.code = config.code || 400;\n        return config;\n      },\n      response: function response(_response, config) {\n        if (_response.status && _response.status.code >= config.code) {\n          return when.reject(_response);\n        }\n\n        return _response;\n      }\n    });\n  });\n})(typeof define === 'function' && define.amd ? define : function (factory) {\n  module.exports = factory(require);\n} // Boilerplate for AMD and Node\n);","map":{"version":3,"names":["define","require","interceptor","when","init","config","code","response","status","reject","amd","factory","module","exports"],"sources":["D:/Chronicle/chronicle-ttm/src/main/frontend/node_modules/rest/interceptor/errorCode.js"],"sourcesContent":["/*\n * Copyright 2012-2013 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n(function (define) {\n\t'use strict';\n\n\tdefine(function (require) {\n\n\t\tvar interceptor, when;\n\n\t\tinterceptor = require('../interceptor');\n\t\twhen = require('when');\n\n\t\t/**\n\t\t * Rejects the response promise based on the status code.\n\t\t *\n\t\t * Codes greater than or equal to the provided value are rejected.  Default\n\t\t * value 400.\n\t\t *\n\t\t * @param {Client} [client] client to wrap\n\t\t * @param {number} [config.code=400] code to indicate a rejection\n\t\t *\n\t\t * @returns {Client}\n\t\t */\n\t\treturn interceptor({\n\t\t\tinit: function (config) {\n\t\t\t\tconfig.code = config.code || 400;\n\t\t\t\treturn config;\n\t\t\t},\n\t\t\tresponse: function (response, config) {\n\t\t\t\tif (response.status && response.status.code >= config.code) {\n\t\t\t\t\treturn when.reject(response);\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t}\n\t\t});\n\n\t});\n\n}(\n\ttypeof define === 'function' && define.amd ? define : function (factory) { module.exports = factory(require); }\n\t// Boilerplate for AMD and Node\n));\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEC,WAAUA,MAAV,EAAkB;EAClB;;EAEAA,MAAM,CAAC,UAAUC,OAAV,EAAmB;IAEzB,IAAIC,WAAJ,EAAiBC,IAAjB;IAEAD,WAAW,GAAGD,OAAO,CAAC,gBAAD,CAArB;IACAE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAd;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACE,OAAOC,WAAW,CAAC;MAClBE,IAAI,EAAE,cAAUC,MAAV,EAAkB;QACvBA,MAAM,CAACC,IAAP,GAAcD,MAAM,CAACC,IAAP,IAAe,GAA7B;QACA,OAAOD,MAAP;MACA,CAJiB;MAKlBE,QAAQ,EAAE,kBAAUA,SAAV,EAAoBF,MAApB,EAA4B;QACrC,IAAIE,SAAQ,CAACC,MAAT,IAAmBD,SAAQ,CAACC,MAAT,CAAgBF,IAAhB,IAAwBD,MAAM,CAACC,IAAtD,EAA4D;UAC3D,OAAOH,IAAI,CAACM,MAAL,CAAYF,SAAZ,CAAP;QACA;;QACD,OAAOA,SAAP;MACA;IAViB,CAAD,CAAlB;EAaA,CA/BK,CAAN;AAiCA,CApCA,EAqCA,OAAOP,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACU,GAAvC,GAA6CV,MAA7C,GAAsD,UAAUW,OAAV,EAAmB;EAAEC,MAAM,CAACC,OAAP,GAAiBF,OAAO,CAACV,OAAD,CAAxB;AAAoC,CArC/G,CAsCA;AAtCA,CAAD"},"metadata":{},"sourceType":"script"}