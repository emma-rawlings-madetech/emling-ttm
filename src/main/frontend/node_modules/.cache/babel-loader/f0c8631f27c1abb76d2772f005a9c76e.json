{"ast":null,"code":"'use strict';var SockJS=require('sockjs-client');import Stomp from'stompjs';function register(registrations){var socket=SockJS('/payroll');var stompClient=Stomp.over(socket);stompClient.connect({},function(frame){registrations.forEach(function(registration){stompClient.subscribe(registration.route,registration.callback);});});}module.exports.register=register;","map":{"version":3,"names":["SockJS","require","Stomp","register","registrations","socket","stompClient","over","connect","frame","forEach","registration","subscribe","route","callback","module","exports"],"sources":["D:/Chronicle/chronicle-ttm/src/main/frontend/src/websocket-listener.js"],"sourcesContent":["'use strict';\r\n\r\nconst SockJS = require('sockjs-client');\r\nimport Stomp from 'stompjs';\r\n\r\nfunction register(registrations) {\r\n\tconst socket = SockJS('/payroll');\r\n\tconst stompClient = Stomp.over(socket);\r\n\tstompClient.connect({}, function(frame) {\r\n\t\tregistrations.forEach(function (registration) {\r\n\t\t\tstompClient.subscribe(registration.route, registration.callback);\r\n\t\t});\r\n\t});\r\n}\r\n\r\nmodule.exports.register = register;"],"mappings":"AAAA,aAEA,GAAMA,OAAM,CAAGC,OAAO,CAAC,eAAD,CAAtB,CACA,MAAOC,MAAP,KAAkB,SAAlB,CAEA,QAASC,SAAT,CAAkBC,aAAlB,CAAiC,CAChC,GAAMC,OAAM,CAAGL,MAAM,CAAC,UAAD,CAArB,CACA,GAAMM,YAAW,CAAGJ,KAAK,CAACK,IAAN,CAAWF,MAAX,CAApB,CACAC,WAAW,CAACE,OAAZ,CAAoB,EAApB,CAAwB,SAASC,KAAT,CAAgB,CACvCL,aAAa,CAACM,OAAd,CAAsB,SAAUC,YAAV,CAAwB,CAC7CL,WAAW,CAACM,SAAZ,CAAsBD,YAAY,CAACE,KAAnC,CAA0CF,YAAY,CAACG,QAAvD,EACA,CAFD,EAGA,CAJD,EAKA,CAEDC,MAAM,CAACC,OAAP,CAAeb,QAAf,CAA0BA,QAA1B"},"metadata":{},"sourceType":"module"}